% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nonlinear_TSNE.R
\name{do.tsne}
\alias{do.tsne}
\title{t-distributed Stochastic Neighbor Embedding}
\usage{
do.tsne(X, ndim = 2, perplexity = 30, eta = 0.05, maxiter = 2000,
  jitter = 0.3, jitterdecay = 0.99, momentum = 0.5,
  preprocess = c("null", "center", "scale", "cscale", "decorrelate",
  "whiten"), pca = TRUE, pcaratio = 0.9, pcascale = FALSE,
  symmetric = FALSE, BarnesHut = FALSE, BHtheta = 0.5)
}
\arguments{
\item{X}{an \eqn{(n\times p)} matrix or data frame whose rows are observations and columns represent independent variables.}

\item{ndim}{an integer-valued target dimension.}

\item{perplexity}{desired level of perplexity; ranging [5,50].}

\item{eta}{learning parameter.}

\item{maxiter}{maximum number of iterations.}

\item{jitter}{level of white noise added at the beginning.}

\item{jitterdecay}{decay parameter in (0,1). The closer to 0, the faster artificial noise decays.}

\item{momentum}{level of acceleration in learning.}

\item{preprocess}{an additional option for preprocessing the data.
Default is "null". See also \code{\link{aux.preprocess}} for more details.}

\item{pca}{whether to use PCA as preliminary step; \code{TRUE} for using it, \code{FALSE} otherwise.}

\item{pcaratio}{proportion of variances explained in finding PCA preconditioning. See also \code{\link{do.pca}} for more details.}

\item{pcascale}{a logical; \code{FALSE} for using Covariance, \code{TRUE} for using Correlation matrix. See also \code{\link{do.pca}} for more details.}

\item{symmetric}{a logical; \code{FALSE} to solve it naively, and \code{TRUE} to adopt symmetrization scheme.}

\item{BarnesHut}{a logical; \code{FALSE} not to use Barnes-Hut heuristic for faster computation, \code{TRUE} otherwise.}

\item{BHtheta}{a positive real number for speed/accuracy trade-off in Barnes-Hut computation. See also \code{theta} parameter from \code{\link[Rtsne]{Rtsne}}.}
}
\value{
a named list containing
\describe{
\item{Y}{an \eqn{(n\times ndim)} matrix whose rows are embedded observations.}
\item{trfinfo}{a list containing information for out-of-sample prediction.}
}
}
\description{
t-distributed Stochastic Neighbor Embedding (t-SNE) is a variant of Stochastic Neighbor Embedding (SNE)
that mimicks patterns of probability distributinos over pairs of high-dimensional objects on low-dimesional
target embedding space by minimizing Kullback-Leibler divergence. While conventional SNE uses gaussian
distributions to measure similarity, t-SNE, as its name suggests, exploits a heavy-tailed Student t-distribution.
For \code{do.tsne}, we implemented a naive version of t-SNE as well as an interface with Barnes-Hut algorithm,
which takes advantage of speed in sacrifice of accuracy.
}
\examples{
\dontrun{
## generate swiss roll data
X = aux.gensamples(n=100)

## compare different perplexity
out1 <- do.tsne(X, ndim=2, perplexity=5)
out2 <- do.tsne(X, ndim=2, perplexity=10)
out3 <- do.tsne(X, ndim=2, perplexity=50)

## Visualize three different projections
par(mfrow=c(1,3))
plot(out1$Y[,1], out1$Y[,2], main="tSNE::perplexity=5")
plot(out1$Y[,1], out1$Y[,2], main="tSNE::perplexity=10")
plot(out1$Y[,1], out1$Y[,2], main="tSNE::perplexity=50")
}

}
\references{
\insertRef{van_der_maaten_visualizing_2008}{Rdimtools}
}
\seealso{
\code{\link{do.sne}}, \code{\link[Rtsne]{Rtsne}}.
}
\author{
Kisung You
}
